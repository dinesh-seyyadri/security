use  the CLI to configure a site-to-site IPsec VPN to securely connect two or more subnets over the Internet or an intranet
step 1:ACL: Used the select the required traffic
step2: ISAKMP Policy : IKE phas 1 policy
step3: Trasform Set:How to encrypt the user data
step4: Crypto ACL:What traffic gets encrypted
step5:Crypto map:Apply all the above

Site-to-Site Tunnel Negotiation Process
Configuring a Site-To-Site IPsec VPN
Step 1: Ensure That ACLs Are Compatible with IPsec
Step 2: Create ISAKMP IKE Phase 1 Policies
Step 3: Configure Transform Sets
Step 4: Create Crypto ACLs Using Extended ACLs
Step 5: Configure IPsec Crypto Maps
Verifying the IPsec Configuration
Configuring a Site-to-Site VPN on the Cisco ASA
Monitoring Site-to-Site VPN Configuration in ASDM

Step 1: Ensure That ACLs Are Compatible with IPsec:

The figure shows an example of the site-to-site VPN tunnel negotiation process. Understanding the negotiation process can help you understand the IPsec site-to-site configuration process. 
There are five steps shown in the example:
a) Client A sends a TCP SYN to Server B.
b) The packet matches a crypto ACL referenced by the crypto map applied to the outbound interface on Router A.
The packet is “interesting” traffic.
Router A finds that it does not have the appropriate IPsec SA available. 
It needs to use the ISAKMP SA to initiate the IKE Phase 2 negotiations. The ISAKMP SA is not present. 
Router A initiates IKE Phase 1 negotiation with Router B. The ISAKMP SA is established.

c) Router A uses the ISAKMP SA to initiate negotiation of the IPsec SA to Router B.
   The TCP SYN is forwarded across the IPsec SA. Router A implements the appropriate transforms and the packet is protected by the IPsec SA. 
   Router B reverses the transforms and the TCP SYN packet from Client A is forwarded to Server B.
d) Server B responds to the TCP SYN with a SYN ACK.
e) The reply packet matches a crypto ACL referenced by the crypto map applied to the outbound interface on Router B. 
   The packet is “interesting” traffic. Router B does not have the appropriate IPsec SA available. 
   It uses the ISAKMP SA to initiate the IKE Phase 2 negotiation with Router A. The IPsec SA from Router B to Router A is established. 
   The TCP SYN ACK is forwarded across the IPsec SA.
   Router B implements the appropriate transforms and the packet is protected by the IPsec SA. 
   Router A reverses the transforms and the cleartext TCP SYN ACK packet from Server B is forwarded to Client A.

Now both IPsec SAs are established. 
Two-way data forwarding can take place using the IPsec SAs. 
The SAs will remain available until they reach their maximum lifetime or maximum data volume. 
When the existing IPsec SAs expire, they will be replaced with new IPsec SAs negotiated using the ISAKMP SA.

STEPS:

Follow these steps to configure a site-to-site IPsec VPN:
a) Ensure that ACLs are compatible with IPsec.
b) Configure an ISAKMP policy to determine the ISAKMP parameters that will be used to establish the tunnel.
c) Define the IPsec transform set.
   The definition of the transform set defines the parameters that the IPsec tunnel uses, and can include the encryption and integrity algorithms.
d) Create a crypto ACL. The crypto ACL defines which traffic should be sent through the IPsec tunnel and be protected by the IPsec process.
e) Create and apply a crypto map. The crypto map groups the previously configured parameters together and defines the IPsec peer devices. 
   The crypto map is applied to the outgoing interface of the VPN device.
   



Step 1: Ensure That ACLs Are Compatible with IPsec

The first step in configuring Cisco IOS ISAKMP is to ensure that existing ACLs on perimeter routers, firewalls, or other routers do not block IPsec traffic. 
Perimeter routers typically implement a restrictive security policy with ACLs, where only specific traffic is permitted and all other traffic is denied. 
Such a restrictive policy may block IPsec traffic. Therefore, you must add specific permit statements to the ACL to allow IPsec traffic.

The figure below and the show running-config command output that follows show a concatenated example of ACL entries permitting IPsec traffic for Router A.
ACL 102 permits protocol 50 (ESP), protocol 51 (AH), and UDP port 500 (ISAKMP) traffic. 
It also permits UDP port 4500 (non500-isakmp). 
These are used by NAT-T, which is a commonly implemented extension to IKE and has been incorporated into IKEv2. 
NAT-T facilitates VPN through intermediate devices that perform port address translation. 
Since ESP does not use the concept of source and destination ports, a PAT device has difficulty with ESP. 
NAT-T encapsulates IPsec within UDP, providing the requisite ports for PAT implementation. 
NAT-T is more commonly an issue with remote-access VPN, but there are scenarios with site-to-site VPN where it applies.


#####

RouterA# show running-config
!
interface Serial0/1
 ip address 172.30.1.2 255.255.255.0
 ip access-group 102 in
!
access-list 102 permit ahp host 172.30.2.2 host 172.30.1.2
access-list 102 permit esp host 172.30.2.2 host 172.30.1.2
access-list 102 permit udp host 172.30.2.2 host 172.30.1.2 eq isakmp
access-list 102 permit udp host 172.30.2.2 host 172.30.1.2 eq non500-isakmp

###

Note that the protocol keyword of esp equals the ESP protocol (number 50), the keyword of ahp equals the AH protocol (number 51), and the isakmp keyword equals UDP port 500.




Step 2: Create ISAKMP IKE Phase 1 Policies

The second major step in configuring Cisco IOS ISAKMP support is to define a suite of ISAKMP policies.
The goal of defining a suite of policies is to define the IKE Phase 1 characteristics and allow ISAKMP peering between two IPsec endpoints.

Use the crypto isakmp policy command to enter ISAKMP configuration mode. 
ISAKMP policies define a set of parameters that IKE uses during Phase 1 negotiations.
Use the no form of this command to delete an IKE policy. 
The command syntax is crypto isakmp policy priority, where priority is a number that uniquely identifies the IKE policy and assigns a priority to the policy.

Note:

Assign the most secure policy the lowest priority number so that the most secure policy will find a match before any less-secure policies are considered.

Within ISAKMP configuration mode, five parameters can be configured:

Parameter |   Keyword  |     Accepted Values  |     Default Value |     Description
         |             |                      |                   |
---------|-------------|______________________| _________________-| ----------------------------------------------- |
1) encryption | des aes aes 192 aes 256 | 56-bit DES-CBC 128-bit AES 192-bit AES 256-bit AES | des| 	Message encryption algorithm

2) hash| sha md5 | 	SHA-1 (HMAC variant) MD5 (HMAC variant)| 	sha| Message integrity (hash) algorithm

3)authentication | rsa-sig rsa-encr pre-share | RSA signatures RSA encrypted nonces preshared keys | rsa-sig | Peer authentication method

4) group | 1 2 5 | 768-bit Diffie-Hellman 1024-bit Diffie-Hellman 1536-bit Diffie-Hellman | 1 | Key exchange parameters (Diffie-Hellman group identifier)

5) lifetime | seconds | 	Can specify any number of seconds | 86,400 sec. (one day) | ISAKMP-established SA lifetime



If you do not specify one of these commands for a policy, the default value will be used for that parameter.



eg: 


RouterA(config)#crypto isakmp policy 110
RouterA(config–isakmp)#authentication pre-share
RouterA(config–isakmp)#encryption aes 128
RouterA(config–isakmp)#group 5
RouterA(config–isakmp)#hash sha
RouterA(config–isakmp)#lifetime 86400

To configure a PSK, use the crypto isakmp key command in global configuration mode. You must configure this key whenever you specify PSKs in an ISAKMP policy. 
Use the no form of this command to delete a PSK. The syntax for the command is as follows:

crypto isakmp key keystring address peer-address
crypto isakmp key keystring hostname peer-hostname

ex: 
RouterA(config)# crypto isakmp key cisco1234 address 172.30.2.2
RouterA(config)# crypto isakmp policy 110  
RouterA(config-isakmp)# authentication pre-share
RouterA(config-isakmp)# exit


RouterB(config)# crypto isakmp key cisco1234 address 172.30.1.2
RouterB(config)# crypto isakmp policy 110
RouterB(config-isakmp)# authentication pre-share
RouterB(config-isakmp)# exit



######################


Step 3: Configure Transform Sets:

A transform set is a combination of individual IPsec transforms that are designed to enact a specific security policy for traffic.
During the IPsec SA negotiation that occurs in IKE Phase 2 quick mode, the peers agree to use a particular transform set.
Transform sets combine these IPsec factors:

- A mechanism for payload authentication: AHHMAC or ESP HMAC transform
- A mechanism for payload encryption: ESP encryption transform
- IPsec mode (transport versus tunnel)

syntax:

crypto ipsec transform-set transform-set-name transform1 [transform2 [transform3]]

eg:
RouterA(config)#crypto ipsec transform-set AES_SHA esp-aes esp-sha-hmac

You can configure multiple transform sets and then specify one or more of the transform sets in a crypto map entry. 
The IPsec SA negotiation uses the transform set that is defined in the crypto map entry to protect the data flows that are specified by the ACL referenced by that crypto map entry. 
During the negotiation, the peers search for a transform set that has the same criteria at both peers.
When such a transform set is found, it is selected and applied to the protected traffic as part of the IPsec SAs of both peers.

Transform sets are negotiated during quick mode in IKE Phase 2 using the transform sets that you previously configured. 
You can configure multiple transform sets and then specify one or more of the transform sets in a crypto map entry. 
Configure the transforms from most to least secure, according to your policy. 
The IPsec SA negotiation uses the transform set that is defined in the crypto map entry to protect the data flows that are specified by the ACL of that crypto map entry.

During the negotiation, the peers search for a transform set that is the same at both peers, as illustrated in the figure below.
In the figure, Router A is the initiator of the negotiation. It sends all its configured transform sets to Router B.
Router B then compares each of the offered transform sets against its first transform set.
If there is a match, Router B agrees to this transform set.
If there is not a match, Router B compares each of the offered transform sets against its second transform set. 
This negotiation continues until a match is found. In the example, a match is found with the second transform set of Router B.

Phase 2 IPsec negotiates three factors, payload integrity authentication using either the AH or ESP HMAC algorithm, payload encryption using the ESP encryption algorithm, and IPsec tunnel mode, either transport or tunnel.

Use the crypto ipsec transform-set global configuration command to define the name of the transform set, the encryption algorithm, and the hashed message authentication code or HMAC algorithm.

The command places you into crypto transform configuration mode.
However, the main thing you do here is configure tunnel mode. 
The default of tunnel mode is typically what you want, so you rarely need to enter anything here.


Step 4: Create Crypto ACLs Using Extended ACLs:

Interesting traffic is defined by crypto ACLs in site-to-site IPsec VPN configurations. As shown in the figure, crypto ACLs perform these functions:
Outbound: For outbound traffic, the ACL defines the flows that IPsec should protect.
Inbound: The same ACL is processed for inbound traffic. The ACL defines traffic that should have been protected with IPsec by the peer. Packets are discarded if they match but arrive unprotected.

Ultimately, traffic is processed against ACL statements.
If there are multiple VPN connections that are defined, each will have its own crypto ACL.
Traffic that is permitted by a crypto ACL is protected and sent through the appropriate VPN tunnels. 
Traffic that is not permitted by any crypto ACL is not protected by IPsec and is forwarded in cleartext.

The access-list command is used to create crypto ACLs. The permit keyword specifies that matching packets must be protected in this tunnel, and the deny keyword specifies that matching packets are not protected by this tunnel.
Denied packets may end up being permitted by other crypto ACLs associated with other tunnels. 
If a packet is not permitted by any crypto ACL, the packet is forwarded without protection. 
The command syntax and parameter definitions for the basic form of extended IP ACLs are as follows:

access-list access-list-number { permit | deny } protocol source source-wildcard destination destination-wildcard

ex:

RouterA(config)# access-list 110 permit tcp 10.0.1.0 0.0.0.255  10.0.2.0 0.0.0.255

Any unprotected inbound traffic that matches a permit entry in the crypto ACL for a crypto map entry that is flagged as IPsec is dropped. This drop occurs because this traffic was expected to be protected by IPsec.
It is important that the crypto ACLs defined on the peer devices are mirror images of each other. 
If they are not, phase 2 negotiation between VPN peers will fail. 
Both inbound and outbound traffic are evaluated against the same outbound IPsec ACL. 
The ACLs are defined from the perspective of outbound traffic from each router.
The peers negotiate security associations on a per-line basis in the crypto ACLs.
Any line in a crypto ACL that does not have a mirror image in the peer crypto ACL is problematic.
The example that is shown in the next figure illustrates symmetric crypto ACL configuration.

For site 1, IPsec protection is applied to traffic between hosts on the 10.0.1.0 network as the data exits the RouterA S0/1 interface in route to site 2 hosts on the 10.0.2.0 network. For traffic from site 1 hosts on the 10.0.1.0 network to site 2 hosts on the 10.0.2.0 network, the ACL entry on Router A is evaluated as follows:
source = hosts on 10.0.1.0 network
destination = hosts on 10.0.2.0 network

For incoming traffic from site 2 hosts on the 10.0.2.0 network to site 1 hosts on the 10.0.1.0 network, that same ACL entry on Router A is evaluated as follows:
source = hosts on 10.0.2.0 network
destination = hosts on 10.0.1.0 network

Step 5: Configure IPsec Crypto Maps

IPsec policies are defined in crypto maps. Each crypto map must define the following criteria:
-The crypto ACL, which specifies which traffic should be protected by IPsec
-The transform set, which specifies the IPsec protocols and cipher policies that are used to protect the traffic
-The IPsec peer, which specifies where the IPsec-protected traffic is sent

Optionally, a crypto map can specify the key management method. Normally IKE is used, but the option to manually define keys is available. A crypto map can also optionally specify a lifetime for the IPsec security association. With Cisco IOS Software, the default lifetime of an IPsec SA is 3600 seconds (one hour).
For IPsec to succeed between two IPsec peers, the peers must contain compatible crypto maps. For two crypto maps to be compatible, they must meet the following minimum criteria:
They must contain compatible (mirror image) crypto ACLs.
They must have at least one transform set in common.
They must identify the other peer.
Use the crypto map global configuration command to create or modify a crypto map and enter the crypto map configuration mode. The command syntax for the crypto map command is as follows:
crypto map map-name seq-num ipsec-isakmp 
The map-name argument is a name that identifies the crypto map and has significance only to the local router. The seq-num argument is a sequence number that is needed when a device has multiple IPsec peers that have different security requirements. The ipsec-isakmp keyword tells the router that IKE will be used to automatically establish the IPsec SA.
In crypto map configuration mode, define the criteria for the crypto map. Use the match address command to specify the crypto ACL, the set transform-set command to specify the transform set, and the set peer command to specify the peer.
To activate a crypto map, use the crypto map command in interface configuration mode to apply the crypto map to an interface that is reachable from the VPN peer. You can apply only one crypto map to an interface. Make sure that you also configure the routing information that is needed to send packets into the tunnel. The figure shows crypto maps applied to the Serial0/1 interfaces of Routers A and B.


You can specify multiple peers in a single crypto map for redundancy, as shown in the figure below. 
If the first peer cannot be contacted, the second peer is used. There is no limit to the number of redundant peers that you can configure. 
If multiple IPsec tunnels are required, you need to create multiple entries in the crypto map. 
The example in the figure below shows only the crypto map configuration commands for Router A, and the crypto map contains only one crypto map entry.

The example crypto map below has two entries. The sequence number (seq-num argument in the crypto map command) distinguishes the crypto map entries and can range from 1 to 65,535. 
Crypto map entries are considered in order. 
If there is overlap between the crypto ACLs referenced by the crypto map entries, the lower sequenced entry will take priority.

####

crypto map VPNMAP 10 ipsec-isakmp 
 description Tunnel to Peer 1
 set peer 198.51.100.10
 set transform-set ESP-AES-SHA 
 match address Local-to-Peer1
crypto map VPNMAP 20 ipsec-isakmp 
 description Tunnel to Peer 2
 set peer 203.0.113.2
 set transform-set ESP-AES-SHA 
 match address Local-to-Peer2
 
extended IP access list Local-to-Peer1
    10 permit ip 10.10.0.0 0.0.255.255 172.16.111.0 0.0.0.255
extended IP access list Local-to-Peer2
    10 permit ip 10.10.0.0 0.0.255.255 192.168.9.0 0.0.0.255
 
crypto ipsec transform-set ESP-AES-SHA esp-aes esp-sha-hmac 
 mode tunnel
interface gigabitethernet 0/0
  crypto map VPNMAP
  
#####


Entry number 10 in crypto map VPNMAP specifies the policy for theVPN to Peer 1 as follows:

The match address command specifies which traffic to protect. It references the ACL named Local-to-Peer 1. IP traffic from the local network 10.10.0.0/16 to the Peer 1 network 172.16.111.0/24 will be protected. Also, implicitly, traffic that is received from the Peer 1 network 172.16.111.0/24 to the local network 10.10.0.0/16 will only be accepted if it arrives within a protected IPsec SA.
The set transform-set command specifies how to protect the traffic. It references the transform-set named ESP-AES-SHA. This transform set specifies a tunnel mode SA that uses 128-bit AES for encryption and 160-bit SHA-1 for data integrity.
The set peer command specifies where to send the protected packet. It specifies the peer public IP address of 198.51.100.10. The original IP header has been encrypted and therefore cannot be used for forwarding. The router will create a new IP header, specifying its own IP address as the source and the peer IP address as the destination.
Entry number 20 specifies the policy for the VPN to Peer 2 in a similar way. To activate the crypto map, it must be applied to an interface that is reachable from each of the VPN peers.

#######


6)Verifying the IPsec Configuration:

show crypto isakmp policy	      Displays configured IKE policies
show crypto ipsec transform-set	Displays configured IPsec transform sets
show crypto map	               Displays configured crypto maps
show crypto ipsec sa	            Displays established IPsec tunnels
show crypto isakmp sa	         Displays the IKE SAs
debug crypto isakmp	            Debugs IKE events
debug crypto ipsec	            Debugs IPsec events






